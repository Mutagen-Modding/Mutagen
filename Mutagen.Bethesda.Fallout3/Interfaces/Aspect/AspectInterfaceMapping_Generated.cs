/*
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 * Autogenerated by Loqui.  Do not manually change.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
*/
using System;
using System.Collections.Generic;
using Mutagen.Bethesda.Plugins.Records.Mapping;
using Mutagen.Bethesda.Plugins.Aspects;
using Loqui;

namespace Mutagen.Bethesda.Fallout3
{
    internal class Fallout3AspectInterfaceMapping : IInterfaceMapping
    {
        public IReadOnlyDictionary<Type, InterfaceMappingResult> InterfaceToObjectTypes { get; }

        public GameCategory GameCategory => GameCategory.Fallout3;

        public Fallout3AspectInterfaceMapping()
        {
            var dict = new Dictionary<Type, InterfaceMappingResult>();
            dict[typeof(IHasIcons)] = new InterfaceMappingResult(
                true,
                new ILoquiRegistration[]
                {
                    MenuIcon_Registration.Instance,
                },
                new InterfaceMappingTypes(
                    Setter: typeof(IHasIcons),
                    Getter: typeof(IHasIconsGetter)));
            dict[typeof(IHasIconsGetter)] = dict[typeof(IHasIcons)] with { Setter = false };
            dict[typeof(IObjectBoundedOptional)] = new InterfaceMappingResult(
                true,
                new ILoquiRegistration[]
                {
                    TextureSet_Registration.Instance,
                },
                new InterfaceMappingTypes(
                    Setter: typeof(IObjectBoundedOptional),
                    Getter: typeof(IObjectBoundedOptionalGetter)));
            dict[typeof(IObjectBoundedOptionalGetter)] = dict[typeof(IObjectBoundedOptional)] with { Setter = false };
            InterfaceToObjectTypes = dict;
        }
    }
}

